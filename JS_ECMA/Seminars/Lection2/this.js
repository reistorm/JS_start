// this - это ключевое слово в языке JavaScript, которое позволяет обратиться 
// к свойствам и методам объекта внутри его методов. А также ключевое слово 
// this доступно в любой функции, и либо принимает значение объекта, который 
// являлся контекстом при вызове функции, либо undefined.
// Работа с this 
const checkThis = function() { 
    console.log(this); 
} 
checkThis(); // Window {0: global, window: Window, 
    //self: Window, document: document, name: "", location: Location, …}

// Как мы можем видеть, если мы объявляем функцию вне объекта, в её this лежит
// глобальный объект Window (если запускать в браузере, если это будет node.js 
// то будет объект global).Функция, объявленная вне какого-либо пользовательского 
// объекта является методом глобального объекта, поэтому её this указывает на 
// глобальный объект. А теперь давайте попробуем создать такую функцию внутри 
// пользовательского объекта:

const checkThisInObject = { 
    testProperty: true, 
    checkThis: function () { 
        console.log(this); 
    }, 
}; 
checkThisInObject.checkThis(); // {testProperty: true, checkThis: ƒ}

// На этот раз в качестве this в функции мы получили наш объект. 
// Вроде все просто, если мы хотим обратиться к свойствам и методам нашего объекта
// надо просто использовать this как ссылку на него, и нам будет все доступно.
// Но есть некоторые тонкости с этим this, которые мы сейчас рассмотрим.