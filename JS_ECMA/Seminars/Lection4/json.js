// JSON.stringify 
// Метод stringify позволяет преобразовать JavaScript объект в строковое 
// представление в JSON формате. Этот очень полезный метод применяется перед 
// отправкой данных на сервер. Также этот метод позволяет сохранить данные в виде
// объекта из JavaScript в текстовый файл, например логи работы программы. Этот
// метод принимает 3 аргумента. Первый, обязательный аргумент- это сам объект,
// который будет преобразован. Второй- это функция обратного вызова, которая будет
// вызвана рекурсивно для всех ключей/значений объекта и которая позволяет
// модифицировать данные при необходимости прямо во время конвертации. Третий это
// количество пробелов, которые будут использоваться для формирования отступов
// внутри строки, чтобы сохранить вид как в коде.

// Объект-> JSON. 
const student = { 
    name: 'Slava', 
    surname: 'Belkin', 
    age: 20, 
    practice: { 
        place: 'IKTG', 
        hours: 47, 
    } 
}; 
console.log(JSON.stringify(student, null, 4)); 
// Вывод в консоль. Обратите внимание, что все ключи стали обернуты в кавычки. 
`{ 
    "name": "Slava", 
    "surname": "Belkin", 
    "age": 20, "
    practice": { 
        "place": "IKTG", 
        "hours": 47 
    } 
}`

///////////////////////////////////////

// JSON.parse Метод parse делает обратную процедуру, принимая строку в качестве
// аргумента, метод пытается распарсить её как строку формата JSON и превратить 
// в объект JavaScript (или массив).

// JSON-> Объект. 
console.log(JSON.parse(`{"name": "Slava", "surname": "Belkin", "age": 20, practice: {"place": "IKGT", "hours": 47}}`)); 
    // {
    //      name: 'Slava', 
    //      surname: 'Belkin', 
    //      age: 20, 
    //      practice: { 
    //          place: 'IKTG', 
    //          hours: 47, 
    //          __proto__: Object 
    //      }, 
    //      __proto__: Object 
    // }
    // console.log(JSON.parse('["Belkin", "Ivanov", "Petrov"]')); 
    // ["Belkin", "Ivanov", "Petrov"]

// Мы успешно преобразовали строку с объектом в реальный объект JavaScript, а также
// строку с массивомвмассив. Если строка не будет соответствовать формату JSON,
// то вы получите синтаксическую ошибку, поэтому такие операции для безопасности
// лучше всего оборачивать в конструкцию try/catch.