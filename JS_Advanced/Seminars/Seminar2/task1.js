// Семинар 2. 
// Продвинутая работа с функциями и классами. Обработка ошибок

// Задание 1 (тайминг 25 минут)
// Давайте создадим класс для управления банковским счетом. В этом классе будет
// приватное свойство для хранения текущего баланса, а также методы для внесения и
// снятия денег со счета.
// 1. Класс должен содержать приватное свойство #balance, которое инициализируется
// значением 0 и представляет собой текущий баланс счета.
// 2. Реализуйте геттер balance, который позволит получить информацию о текущем балансе.
// 3. Реализуйте метод deposit(amount), который позволит вносить средства на счет.
// Убедитесь, что сумма внесения не отрицательная; в противном случае выбрасывайте ошибку.
// 4. Реализуйте метод withdraw(amount), который позволит снимать средства со счета.
// Убедитесь, что сумма для снятия неотрицательная и что на счете достаточно средств;
// в противном случае выбрасывайте ошибку.
// 5. Реализуйте конструктор, который принимает начальный баланс в качестве аргумента.
// Убедитесь, что начальный баланс не отрицательный; в противном случае выбрасывайте ошибку.


class BankAccount {
    // Приватное св-во для хранения баланса
    #balance = 0;
    // constructor(initialBalance) Конструктор для инициализации начального баланса
    constructor(amount) {
        if(amount < 0){
            throw new Error('Отрицательный баланс');
        }
        this.#balance = amount;
    }
    // Геттер для получения текущего баланса
    get balance() {
        return this.#balance;
    }
    set balance(amount) {
        this.#balance = amount;
    }
    // Метод для внесения денег на счет
    deposit(cash) {
        if(cash <= 0) {
            throw new Error('Сумма для депозита дб больше 0')
        }
        this.balance += cash;
    }
    // withdraw(amount) Метод для снятия денег со счета
    withdraw(cash) {
        if(cash <= 0) {
            throw new Error('Сумма для снятия дб больше 0')
        }
        if(this.balance - cash < 0) {
            throw new Error('Сумма для снятия больше суммы счета');
        }
        this.balance -= cash;
    }
}

// Создаем новый банковский счет с начальным балансом 500
let account = new BankAccount(500);
console.log(account.balance); // 500

account.deposit(200);
console.log(account.balance); // 700

account.withdraw(100);
console.log(account.balance); // 600
