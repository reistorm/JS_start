// Задание 1
// Представьте, что у вас есть класс для управления библиотекой. В этом классе будет
// приватное свойство для хранения списка книг, а также методы для добавления книги,
// удаления книги и получения информации о наличии книги.

class Library {
    // Класс должен содержать приватное свойство #books, которое инициализируется пустым
    // массивом и представляет собой список книг в библиотеке.
    #_books;
    // Реализуйте конструктор, который принимает начальный список книг (массив) в качестве
    // аргумента. Убедитесь, что предоставленный массив не содержит дубликатов;
    // в противном случае выбрасывайте ошибку.

    constructor(initialBooks = []) {
        const uniqueBooks = [...new Set(initialBooks)];

        if (uniqueBooks.length !== initialBooks.length) {
            throw new Error('Ошибка: Начальный список содержит дубликаты.');
        }
        this.#_books = uniqueBooks;
    }

    // Реализуйте геттер allBooks, который возвращает текущий список книг.
    get allBooks() {
        return this.#_books;
    }
    // Реализуйте метод addBook(title), который позволяет добавлять книгу в список.
    // Если книга с таким названием уже существует в списке, выбросьте ошибку с
    // соответствующим сообщением.
    
    addBook(title) {
        if (this.hasBook(title)) {
            throw new Error(`Ошибка: Книга с названием "${title}" уже существует.`);
        }
        this.#_books.push(title);
    }
    // Реализуйте метод removeBook(title), который позволит удалять книгу из списка по
    // названию. Если книги с таким названием нет в списке, выбросьте ошибку с
    // соответствующим сообщением.
    removeBook(title) {
        const index = this.#_books.indexOf(title);
        if (index === -1) {
            throw new Error(`Ошибка: Книга с названием "${title}" не найдена.`);
        }
        this.#_books.splice(index, 1);
    }

    // Реализуйте метод hasBook(title), который будет проверять наличие книги в библиотеке
    // и возвращать true или false в зависимости от того, есть ли такая книга в списке или нет.
    hasBook(title) {
        return this.#_books.includes(title);
    }
};

// Пример использования
const library = new Library(["Евгений Онегин", "Мастер и Маргарита", "Убик"]);

console.log(library.allBooks); // ["Евгений Онегин", "Мастер и Маргарита", "Убик"]

library.addBook("Собачье сердце");
console.log(library.allBooks); // ["Евгений Онегин", "Мастер и Маргарита", "Убик", "Собачье сердце"]

console.log(library.hasBook("Евгений Онегин")); // true
console.log(library.hasBook("Тихий Дон")); // false

library.removeBook("Евгений Онегин");
console.log(library.allBooks); // ["Мастер и Маргарита", "Убик", "Собачье сердце"]

// Попытка добавить дубликат
library.addBook("Мастер и Маргарита"); // Ошибка
